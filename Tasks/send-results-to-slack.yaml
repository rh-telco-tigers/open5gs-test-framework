apiVersion: tekton.dev/v1
kind: Task
metadata:
  name: send-results-to-slack
  namespace: test
spec:
  results:
    - description: indicates whether the unit-testing passsed or is failed
      name: message
      type: string
  steps:
    - computeResources: {}
      env:
        - name: USERNAME
          valueFrom:
            secretKeyRef:
              key: username
              name: aap-credentials
        - name: PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: aap-credentials
      image: quay.io/rh-ee-saahmed/alpine-jq
      name: send-results-to-slack
      script: |
        #!/bin/sh
        set -e
        mkdir -p /mnt/output

        export artifact_name=$(cat /mnt/output/latest_artifact.txt)
        export user_token=$(cat /mnt/output/user_token.txt)

        echo "Getting Job Template ID"
        JOB_TEMPLATE_ID=$(curl -k -u "${USERNAME}:${PASSWORD}" -X GET "https://<aap-api>/api/v2/job_templates/?name=Slack" \
        -H "Content-Type: application/json" | jq -r '.results[0].id')

        echo "Running Playbook in AAP"
        RESPONSE=$(curl -k -u "${USERNAME}:${PASSWORD}" -X POST -H "Content-Type: application/json" -d "{\"extra_vars\": {\"artifact_name\": \"$artifact_name\" , \"user_token\": \"$user_token\" }}" "https://automation-controller-aap.apps.fireline.tmetse.bos2.lab/api/v2/job_templates/$JOB_TEMPLATE_ID/launch/")

        LATEST_JOB_ID=$(echo $RESPONSE | jq -r '.job')
        while true; do
            # Get the latest job status
             JOB_STATUS=$(curl -k -u "${USERNAME}:${PASSWORD}" -H "Content-Type: application/json" "https://<aap-api>/api/v2/jobs/$LATEST_JOB_ID/" | jq -r '.status')
            
              if [[ "$JOB_STATUS" == "successful" || "$JOB_STATUS" == "failed" || "$JOB_STATUS" == "canceled" ]]; then
                  echo "Job finished with status: $JOB_STATUS"
                  break
              fi
            
              echo "Waiting for job to finish..."
              sleep 4  # Wait for 10 seconds before checking again
        done

        sleep 15
        echo "Save Final Output"
        curl -k -u "${USERNAME}:${PASSWORD}" \
                    -H "Content-Type: application/json" \
                    "https://<aap-api>/api/v2/jobs/$LATEST_JOB_ID/stdout/?format=txt" | \
                        tee >(grep "Final Result:" | sed 's/.*Final Result: //g' | sed 's/"$//g' > /mnt/output/slack_message.txt)
        echo "$(cat /mnt/output/slack_message.txt)"
        echo "copying to results"

        if [ "$(cat /mnt/output/slack_message.txt)" = "True" ]; then
            printf failed | tee $(results.message.path)
        else
            printf pass | tee $(results.message.path)
        fi
  workspaces:
    - mountPath: /mnt
      name: output
